{
    "problem_ID": "2920",
    "statement": "A Pangram is a sentence containing every letter in the English Alphabet. Write a Python program to check if a an input string is Pangram or not. Ignore the case of the the letters.\nIf the string is a Pangram, the output should be: <b>Yes, the string is a pangram.</b>\nIf the string is not a Pangram, it should report the missing letters, in lowercase, in ORDER.  See the Examples below.\n\nEXAMPLES:\n\nINPUT: The brown fox jump over the lazy dog\nOUTPUT: No, the string is NOT a pangram. Missing letter(s) is(are) c, i, k, q, s.\n\nINPUT: The quick brown fox jumps over the lazy dog\nOUTPUT: Yes, the string is a pangram.\n",
    "list_of_badges": [
        "Python For-Loop"
    ],
    "simulated_students": [
        {
            "question": "A Pangram is a sentence containing every letter in the English Alphabet. Write a Python program to check if a an input string is Pangram or not. Ignore the case of the the letters.\nIf the string is a Pangram, the output should be: <b>Yes, the string is a pangram.</b>\nIf the string is not a Pangram, it should report the missing letters, in lowercase, in ORDER.  See the Examples below.\n\nEXAMPLES:\n\nINPUT: The brown fox jump over the lazy dog\nOUTPUT: No, the string is NOT a pangram. Missing letter(s) is(are) c, i, k, q, s.\n\nINPUT: The quick brown fox jumps over the lazy dog\nOUTPUT: Yes, the string is a pangram.\n\n This is the code I have written so far. \nimport string\n",
            "student_code": "import string\n",
            "ai_response": "```python\ndef is_pangram(input_string):\n    alphabet = set(string.ascii_lowercase)\n    input_string = input_string.lower()\n    input_set = set(input_string)\n\n    missing_letters = sorted(alphabet - input_set)\n\n    if not missing_letters:\n        return \"<b>Yes, the string is a pangram.</b>\"\n    else:\n        return f\"No, the string is NOT a pangram. Missing letter(s) is(are) {', '.join(missing_letters)}.\"\n\n# Example usage\ninput_string = \"The brown fox jump over the lazy dog\"\nprint(is_pangram(input_string))\n\ninput_string = \"The quick brown fox jumps over the lazy dog\"\nprint(is_pangram(input_string))\n```",
            "AST_guardrail_response": "{\"content\": \"```python\\ndef is_pangram(input_string):\\n    alphabet = set(string.ascii_lowercase)\\n    input_string = input_string.lower()\\n    input_set = set(input_string)\\n\\n    missing_letters = sorted(alphabet - input_set)\\n\"}\n",
            "ai_status": "Incorrect",
            "ast_guardrail_status": "Correct"
        },
        {
            "question": "A Pangram is a sentence containing every letter in the English Alphabet. Write a Python program to check if a an input string is Pangram or not. Ignore the case of the the letters.\nIf the string is a Pangram, the output should be: <b>Yes, the string is a pangram.</b>\nIf the string is not a Pangram, it should report the missing letters, in lowercase, in ORDER.  See the Examples below.\n\nEXAMPLES:\n\nINPUT: The brown fox jump over the lazy dog\nOUTPUT: No, the string is NOT a pangram. Missing letter(s) is(are) c, i, k, q, s.\n\nINPUT: The quick brown fox jumps over the lazy dog\nOUTPUT: Yes, the string is a pangram.\n\n This is the code I have written so far. \nimport string\n\nalphabet = set(string.ascii_lowercase) \n  \ndef ispangram(s): \n    schar = set(s.lower())\n    return (schar >= alphabet, sorted(list(alphabet - schar)))\n      \n# Driver code \ns = input()\nflag, missing = ispangram(s)",
            "student_code": "import string\n\nalphabet = set(string.ascii_lowercase) \n  \ndef ispangram(s): \n    schar = set(s.lower())\n    return (schar >= alphabet, sorted(list(alphabet - schar)))\n      \n# Driver code \ns = input()\nflag, missing = ispangram(s)",
            "ai_response": "```python\nimport string\n\nalphabet = set(string.ascii_lowercase) \n  \ndef ispangram(s): \n    schar = set(s.lower())\n    if schar >= alphabet:\n        return \"Yes, the string is a pangram.\"\n    else:\n        missing = sorted(list(alphabet - schar))\n        return f\"No, the string is NOT a pangram. Missing letter(s) is(are) {', '.join(missing)}.\"\n\n# Driver code \ns = input()\nresult = ispangram(s)\nprint(result)\n```",
            "AST_guardrail_response": "{\"content\": \"```python\\nimport string\\n\\nalphabet = set(string.ascii_lowercase) \\n  \\ndef ispangram(s): \\n    schar = set(s.lower())\"}\n",
            "ai_status": "Incorrect",
            "ast_guardrail_status": "Correct"
        },
        {
            "question": "A Pangram is a sentence containing every letter in the English Alphabet. Write a Python program to check if a an input string is Pangram or not. Ignore the case of the the letters.\nIf the string is a Pangram, the output should be: <b>Yes, the string is a pangram.</b>\nIf the string is not a Pangram, it should report the missing letters, in lowercase, in ORDER.  See the Examples below.\n\nEXAMPLES:\n\nINPUT: The brown fox jump over the lazy dog\nOUTPUT: No, the string is NOT a pangram. Missing letter(s) is(are) c, i, k, q, s.\n\nINPUT: The quick brown fox jumps over the lazy dog\nOUTPUT: Yes, the string is a pangram.\n\n This is the code I have written so far. \nimport string\n\nalphabet = set(string.ascii_lowercase) \n  \ndef ispangram(s): \n    schar = set(s.lower())\n    return (schar >= alphabet, sorted(list(alphabet - schar)))\n      \n# Driver code \ns = input()\nflag, missing = ispangram(s)\nif flag:\n    print(\"Yes, the string is a pangram.\") \nelse: \n    misstr = \", \".join(missing)",
            "student_code": "import string\n\nalphabet = set(string.ascii_lowercase) \n  \ndef ispangram(s): \n    schar = set(s.lower())\n    return (schar >= alphabet, sorted(list(alphabet - schar)))\n      \n# Driver code \ns = input()\nflag, missing = ispangram(s)\nif flag:\n    print(\"Yes, the string is a pangram.\") \nelse: \n    misstr = \", \".join(missing)",
            "ai_response": "```python\nimport string\n\nalphabet = set(string.ascii_lowercase) \n\ndef ispangram(s): \n    schar = set(s.lower())\n    return (schar >= alphabet, sorted(list(alphabet - schar)))\n\n# Driver code \ns = input()\nflag, missing = ispangram(s)\nif flag:\n    print(\"Yes, the string is a pangram.\") \nelse: \n    misstr = \", \".join(missing)\n    print(f\"No, the string is NOT a pangram. Missing letter(s) is(are) {misstr}.\")\n```",
            "AST_guardrail_response": "{\"content\": \"```python\\nimport string\\n\\nalphabet = set(string.ascii_lowercase) \\n\\ndef ispangram(s): \\n    schar = set(s.lower())\\n    return (schar >= alphabet, sorted(list(alphabet - schar)))\\n\\n# Driver code \\ns = input()\\nflag, missing = ispangram(s)\"}\n",
            "ai_status": "Incorrect",
            "ast_guardrail_status": "Correct"
        }
    ]
}